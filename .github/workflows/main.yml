name: Build DutyManager App Bundle with Custom Files

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ধাপ ১: আপনার রিপোজিটরির সমস্ত ফাইল চেকআউট করা
    - name: Checkout repository
      uses: actions/checkout@v4

    # ধাপ ২: ডকার এনভায়রনমেন্ট সেটআপ করা (আপনার কোড অনুযায়ী)
    - name: Set up Docker
      uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3

    # ধাপ ৩: আপনার ফাইল ব্যবহার করে AAB তৈরি করা (আপনার কোডের উন্নত সংস্করণ)
    - name: Build Android App Bundle (AAB) using Docker
      run: |
        docker run --rm -v "$(pwd)":/app -w /app beevelop/cordova:latest bash -c "
          # ১. একটি নতুন Cordova প্রজেক্ট 'build_folder' নামে তৈরি করা (আপনার কোড অনুযায়ী)
          cordova create build_folder com.belal.dutymanager DutyManager &&
          
          # ২. নতুন প্রজেক্টের ভেতরে প্রবেশ করা (আপনার কোড অনুযায়ী)
          cd build_folder &&
          
          # ৩. আপনার রিপোজিটরির ফাইলগুলোকে নতুন প্রজেক্টের সঠিক জায়গায় কপি করা
          #    (এটিই একমাত্র প্রয়োজনীয় পরিবর্তন)
          cp ../config.xml . &&
          cp ../index.html www/index.html &&
          cp ../icon.png . &&
          cp ../splash.png . &&
          
          # ৪. অ্যান্ড্রয়েড প্ল্যাটফর্ম যোগ করা (আপনার কোড অনুযায়ী)
          cordova platform add android &&
          
          # ৫. আপনার দেওয়া সফল AAB বিল্ড কমান্ডটি চালানো (আপনার কোড অনুযায়ী)
          cordova build android --release -- --bundle
        "
      
    # ধাপ ৪: সঠিক লোকেশন থেকে AAB ফাইলটি আপলোড করা (আপনার কোড অনুযায়ী)
    - name: Upload AAB as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: DutyManager-AAB
        path: build_folder/platforms/android/app/build/outputs/bundle/release/app-release.aab
